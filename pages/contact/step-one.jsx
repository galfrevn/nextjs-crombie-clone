import Head from "next/head";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import StepsRow from "../../components/StepsRow";
import BlackButton from "../../components/ui/BlackButton";

export default function Contact() {
  const router = useRouter();

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const onSubmit = (data) => {
    if (!errors.length) {
      router.push("/contact/step-two")
    }
  };

  return (
    <div className="bg-black h-screen">
      <Head>
        <title>Contact | Crombie</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.ico" />
        <meta name="theme-color" content="#000000" />
      </Head>

      <div className="px-8 pt-20">
        <p className="text-[11px] text-[#777] pb-5">
          First, we want to know about you and your company:{" "}
        </p>

        <form
          action=""
          className="text-[11px]"
          autoComplete="off"
          onSubmit={handleSubmit(onSubmit)}
        >
          <div className="mb-4 ">
            <label className=" text-white font-bold mb-2">My name is</label>
            <input
              {...register("name", {
                required: true,
              })}
              type="text"
              placeholder="Your name"
              className={`${
                errors.name ? "focus:border-b-red-700 " : "focus:border-b-[#282826]"
              } w-full py-1 pr-3 leading-tight focus:outline-none  focus:border-b-[1px] bg-black text-[#777] placeholder:text-[11px] placeholder:text-[#282826] `}
            />
            <div className="text-red-700 text-[10px]  ">
              {errors.name?.type === "required" && "A name is required"}
            </div>
          </div>

          <div className="mb-4 ">
            <label className=" text-white font-bold mb-2">My email is</label>
            <input
              {...register("email", {
                required: true,
                pattern: {
                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
                  message: "invalid email address"
                }
              })}
              type="text"
              placeholder="Your email"
              className={`${
                errors.email ? "focus:border-b-red-700 " : "focus:border-b-[#282826]"
              } w-full py-1 pr-3 leading-tight focus:outline-none  focus:border-b-[1px] bg-black text-[#777] placeholder:text-[11px] placeholder:text-[#282826] `}
            />
            <div className="text-red-700 text-[10px]  ">
              {errors.email?.type === "required" && "Email is required"}
              {errors.email?.type === "pattern" && "Please, enter a valid email"}
              
            </div>
            
          </div>

          <div className="mb-4 ">
            <label className=" text-white font-bold mb-2">I&apos;m from</label>
            <input
              {...register("city", {
                required: true,
              })}
              type="text"
              placeholder="City, country"
              className={`${
                errors.city ? "focus:border-b-red-700 " : "focus:border-b-[#282826]"
              } w-full py-1 pr-3 leading-tight focus:outline-none  focus:border-b-[1px] bg-black text-[#777] placeholder:text-[11px] placeholder:text-[#282826] `}
            />
            <div className="text-red-700 text-[10px]  ">
              {errors.city?.type === "required" && "Please fill this field"}
            </div>
          </div>

          <div className="mb-4 flex">
            <div className="w-1/2">
              <label className=" text-white font-bold mb-2">I represent</label>
              <input
                {...register("company", {
                  required: true,
                })}
                type="text"
                placeholder="Your company"
                className={`${
                  errors.company ? "focus:border-b-red-700 " : "focus:border-b-[#282826]"
                } w-full py-1 pr-3 leading-tight focus:outline-none  focus:border-b-[1px] bg-black text-[#777] placeholder:text-[11px] placeholder:text-[#282826] `}
              />
              <div className="text-red-700 text-[10px]  ">
                {errors.company?.type === "required" && "Company is required"}
              </div>
            </div>
            <div className="w-1/2 flex flex-col text-white">
              <label className=" text-white font-bold ">a, </label>
              <select
                {...register("type")}
                className="bg-black text-[#777] appearance-none focus:outline-none "
              >
                <option value="Corp" className="p-2 border-none">
                  Company
                </option>
                <option value="Startup" className="p-2 border-none">
                  Startup
                </option>
              </select>
            </div>
          </div>

          <div className="mb-4 ">
            <label className=" text-white font-bold mb-2">That</label>
            <textarea
              {...register("info")}
              type="text"
              rows="1"
              placeholder="City, country"
              className={
                "resize-none w-full py-1 pr-3 leading-tight focus:outline-none focus:border-b-[#282826] focus:border-b-[1px] bg-black text-[#777] placeholder:text-[11px] placeholder:text-[#282826] "
              }
            />
          </div>

          <div className="mb-4 ">
            <label className=" text-white font-bold mb-2">
              You can visit us at
            </label>
            <input
              {...register("place")}
              type="text"
              placeholder="City, country"
              className={`${
                errors.place ? "focus:border-b-red-700 " : "focus:border-b-[#282826]"
              } w-full py-1 pr-3 leading-tight focus:outline-none  focus:border-b-[1px] bg-black text-[#777] placeholder:text-[11px] placeholder:text-[#282826] `}
            />
          </div>
          <div className="flex items-center justify-between">
            <StepsRow step={1} />
            <BlackButton text="Next" type="white" />
          </div>
        </form>
      </div>
    </div>
  );
}
