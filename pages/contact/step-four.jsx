import Head from "next/head";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import StepsRow from "../../components/StepsRow";
import BlackButton from "../../components/ui/BlackButton";
import { ChevronLeftIcon } from "@heroicons/react/outline";
import Link from "next/link";
import { Range, getTrackBackground } from "react-range";
import { useEffect, useState } from "react";

const STEP = 1000;
const MIN = 1000;
const MAX = 100000;

export default function Contact() {
  const router = useRouter();
  const [values, setValues] = useState([10000]);

  useEffect(() => {
    if (values == 100000) {
      console.log("100k");
      document.getElementById("output").innerHTML = "+100k"
    }
  }, [values]);

  const {
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = (data) => {
    console.log(data);
    console.log(errors);
    if (!errors.length) {
      router.push("/contact/step-four");
    }
  };

  return (
    <div className="bg-black h-screen">
      <Head>
        <title>Contact | Crombie</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.ico" />
        <meta name="theme-color" content="#000000" />
      </Head>

      <div className="px-8 pt-20">
        <p className="text-[11px] text-[#777] pb-5">
          Almost there! now we want to know your budget and time{" "}
        </p>

        <form
          action=""
          className="text-[11px]"
          autoComplete="off"
          onSubmit={handleSubmit(onSubmit)}
        >
          <Range
            values={values}
            step={STEP}
            min={MIN}
            max={MAX}
            onChange={(values) => setValues(values)}
            renderTrack={({ props, children }) => (
              <div
                onMouseDown={props.onMouseDown}
                onTouchStart={props.onTouchStart}
                style={{
                  ...props.style,
                  height: "36px",
                  display: "flex",
                  width: "100%",
                }}
              >
                <div
                  ref={props.ref}
                  style={{
                    height: "1px",
                    width: "100%",
                    borderRadius: "4px",
                    background: getTrackBackground({
                      values,
                      colors: ["#CCC", "#777"],
                      min: MIN,
                      max: MAX,
                    }),
                    alignSelf: "center",
                  }}
                >
                  {children}
                </div>
              </div>
            )}
            renderThumb={({ props, isDragged }) => (
              <div
                {...props}
                style={{
                  ...props.style,
                  height: "10px",
                  width: "10px",
                  borderRadius: "4px",
                  backgroundColor: "#CCC",
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                }}
                className="focus-visible:border-none focus-visible:outline-none"
              ></div>
            )}
          />
          <output className="text-white mt-1" id="output">
            {values[0].toFixed(0)}
          </output>

          <div className="flex items-center justify-between">
            <StepsRow step={4} />
            <div className="flex items-center">
              <Link href={"/contact/step-two"} passHref>
                <ChevronLeftIcon className="w-4 h-4 mr-2 p-[1px] rounded-full border-[#777] border-[1px] text-[#777] " />
              </Link>
              <BlackButton text="Next" type="white" />
            </div>
          </div>
        </form>
      </div>
    </div>
  );
}
